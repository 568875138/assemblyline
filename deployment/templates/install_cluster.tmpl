# {app_name} cluster installation instruction

Unless otherwise noted perform these steps in the order listed.

**Prerequisites:**

* All boxes have a fresh ubuntu 14.04.3 server install. (See [Install notes](build_doc.html?fname=install_ubuntu_server.md))
* You are on a network connected to the internet and can download file from Amazon S3
* You've ran the create_deployment.py script and committed the output to your personal git repo as al_private.
** If you didn't commit the code to your repo, you can always copy the files over manually instead of running the git clone command.

## On All Boxes
We recommend using clusterssh when performing operation on multiple computers so they are all configured the same way.

### Install GIT and SSH

    sudo apt-get -y install git ssh

### Update .bashrc

    cat >> ~/.bashrc <<EOF
    export PYTHONPATH=/opt/al/pkg
    source /etc/default/al
    EOF

    source ~/.bashrc

    # The source command will generate an error, but it will disappear once the install is complete.

### Create repository directory

    sudo mkdir -p ${{PYTHONPATH}} &&
    sudo chown -R `whoami`:`groups | awk '{{print $1}}'` ${{PYTHONPATH}}/.. &&
    cd ${{PYTHONPATH}}

## CORE Server Pre-Install

### Clone main repo from Github

    # From github HTTPS
    cd $PYTHONPATH
    GITHUB_USER=<your_github_username>
    git clone https://${{GITHUB_USER}}@github.com/${{GITHUB_USER}}/al_private.git private
    git clone https://${{GITHUB_USER}}@github.com/CommunicationsSecurityEstablishment/assemblyline.git

### Create temporary git server

    mkdir ${{PYTHONPATH}}/../git && cd ${{PYTHONPATH}}/../git
    git clone --bare ../pkg/assemblyline/ assemblyline && (cd assemblyline && git update-server-info)
    cd ${{PYTHONPATH}}/.. && sudo python -m SimpleHTTPServer 80

    # Note: Leave web server running in a window (you will return to this window later).

## Riak Nodes (using cluster SSH)

### Set AL_SEED to an appropriate value and update .bashrc

    cat >> ~/.bashrc <<EOF
    export AL_SEED=private.seeds.deployment.seed
    export AL_CORE_IP={ip_core}
    EOF

    source ~/.bashrc

### Clone assemblyline repo

    cd ${{PYTHONPATH}}
    git clone http://${{AL_CORE_IP}}/git/private
    git clone http://${{AL_CORE_IP}}/git/assemblyline

### Run install script

    /opt/al/pkg/assemblyline/al/install/install_riak.py
    sudo reboot

    # Login and run the script again.
    /opt/al/pkg/assemblyline/al/install/install_riak.py

## Returning to CORE Server

### Stop temporary git HTTP server
    # Switch back to the window containing the running SimpleHTTPServer.
    ^C
    rm -rf git

### Run install script with install seed

    export AL_SEED=private.seeds.deployment.seed
    /opt/al/pkg/assemblyline/al/install/install_core.py

## Log Server (Optional)
If a log server is specified in your seed, should should install it now.

### Update .bashrc

    cat >> ~/.bashrc <<EOF
    export AL_CORE_IP={ip_core}
    EOF

    source ~/.bashrc

### Clone repos

    cd ${{PYTHONPATH}}
    git clone http://${{AL_CORE_IP}}/git/private
    git clone http://${{AL_CORE_IP}}/git/assemblyline

### Run install script with install seed

    export AL_SEED=private.seeds.deployment.seed
    /opt/al/pkg/assemblyline/al/install/install_logserver.py

## Workers (using cluster SSH)

### Update .bashrc

    cat >> ~/.bashrc <<EOF
    export AL_CORE_IP={ip_core}
    EOF

    source ~/.bashrc

### Clone repos

    cd ${{PYTHONPATH}}
    git clone http://${{AL_CORE_IP}}/git/private
    git clone http://${{AL_CORE_IP}}/git/assemblyline

### Run install script with install seed

    export AL_SEED=private.seeds.deployment.seed
    /opt/al/pkg/assemblyline/al/install/install_worker.py


